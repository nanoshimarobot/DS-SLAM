# FROM yubaoliu/root:ros-cuda10.0-cudnn7-ubuntu16.04
# FROM slamai/ubuntu16:cuda11.3.0
FROM slamai/ubuntu18:cuda12.0.1

# RUN rm /etc/apt/sources.list.d/cuda.list

RUN sudo apt update \
    &&  sudo apt install -f \
    && sudo apt install -y -f libglew-dev \
       libxkbcommon-dev \
       cmake-qt-gui \
       libgoogle-glog-dev \
       libatlas-base-dev \
       libgflags-dev \
       libhdf5-serial-dev \
       libleveldb-dev \
       liblmdb-dev \
       libopencv-dev \
       libprotobuf-dev \
       libsnappy-dev \
       protobuf-compiler \
       python-numpy \
       python-tk \
       libeigen3-dev

# ros-kinetic-octomap-ros \
       
## update pip
# RUN curl -kL   https://bootstrap.pypa.io/pip/2.7/get-pip.py | python2.7  \
#     && curl -kL https://bootstrap.pypa.io/get-pip.py | python3 
# RUN pip3 install --upgrade pip 

## coco API
# RUN pip install git+https://github.com/philferriere/cocoapi.git#subdirectory=PythonAPI

# RUN pip3 install "git+https://github.com/philferriere/cocoapi.git#subdirectory=PythonAPI"

# Install SegNet dependencies
COPY docker/requirements.txt /root/requirements.txt
# RUN  pip2 install  -r /root/requirements.txt --ignore-installed enum34
# RUN  pip install  -r /root/requirements.txt

# WORKDIR /home/ubuntu/
RUN apt-get update && apt-get install -y libepoxy-dev

#Pangolin
RUN git clone https://github.com/stevenlovegrove/Pangolin.git \
    && cd Pangolin \
    && git checkout v0.6 \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Debug \
    && make -j 3 \
    && sudo make install

# RUN sudo apt install -f -y libepoxy-dev \

## Sophus
#RUN git clone https://github.com/yubaoliu/Sophus.git \
#    && cd Sophus \
#    && git checkout master \
#    && mkdir build \
#    && cd build \
#    && cmake .. -DCMAKE_BUILD_TYPE=Debug \
#    && make -j3 \
#    && make install 

# G2O
#RUN git clone https://github.com/yubaoliu/g2o.git \
#   && cd g2o \
#   && mkdir build \
#   && cd build \
#   && cmake .. -DCMAKE_BUILD_TYPE=Debug \
#   && make -j 3 \
#   && make install \
#   && cmake .. -DCMAKE_BUILD_TYPE=Release \
#   && make -j 3 \
#   && make install

## TUM Benchmark
#RUN cd /root \
#    && svn checkout https://svncvpr.in.tum.de/cvpr-ros-pkg/trunk/rgbd_benchmark/rgbd_benchmark_tools

# RUN git clone https://github.com/yubaoliu/DS-SLAM.git \
#     && cd DS-SLAM  \
#     && chmod +x DS_SLAM_BUILD.sh \
#     && ./DS_SLAM_BUILD.sh

#RUN  git clone https://github.com/yubaoliu/caffe-segnet.git \
#    && cd caffe-segnet \
#    && mkdir build  \
#    && cd build \
#    && cmake .. -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=/usr/local \
#    && make -j2 \
#    && make install 

# Download SegNet modle
# RUN mkdir /root/cnnmodel \
#    && cd /root/cnnmodel \
#       && wget -c http://mi.eng.cam.ac.uk/~agk34/resources/SegNet/segnet_pascal.caffemodel

RUN sudo apt-get install -y xcb

# RUN sudo apt-get install -y ros-kinetic-octomap ros-kinetic-octomap-mapping ros-kinetic-octomap-msgs ros-kinetic-octomap-ros ros-kinetic-octomap-rviz-plugins ros-kinetic-octomap-server

# RUN sudo apt-get install -y ros-kinetic-octomap ros-kinetic-octomap-mapping ros-kinetic-octomap-msgs ros-kinetic-octomap-ros ros-kinetic-octomap-rviz-plugins ros-kinetic-octomap-server

# Octomap
# RUN git clone https://github.com/OctoMap/octomap_mapping.git \
#     && chmod +x octomap_mapping/octomap_server/cfg/OctomapServer.cfg
# 
# RUN git clone https://github.com/OctoMap/octomap_rviz_plugins.git


# RUN cd /root/catkin_ws \
#     && /bin/bash -c "source /opt/ros/kinetic/setup.bash & catkin_make"

# cd /root/catkin_ws 
# chmod +x /root/catkin_ws/src/octomap_mapping/octomap_server/cfg/OctomapServer.cfg
# catkin_make

RUN rosdep update

RUN sudo apt update \
    && sudo apt install -y -f rospack-tools \
    ros-${ROS_DISTRO}-tf2-msgs \
    ros-${ROS_DISTRO}-image-transport \
    ros-${ROS_DISTRO}-pcl-ros \
    ros-${ROS_DISTRO}-nav-msgs


RUN sudo ln -fs /bin/bash /bin/sh
RUN echo 'export __NV_PRIME_RENDER_OFFLOAD=1' >> ~/.zshrc \
    && echo 'export __GLX_VENDOR_LIBRARY_NAME=nvidia' >> ~/.zshrc

RUN cd /root/catkin_ws/src \
    && git clone https://github.com/OctoMap/octomap_mapping.git \
    && cd octomap_mapping \
    && git checkout bd66bc1f024f6d77ec2ad175d15c82746063c301 \
    && sed -i '29i #define COLOR_OCTOMAP_SERVER'  octomap_server/include/octomap_server/OctomapServer.h

RUN cd /root/catkin_ws/src \
    && git clone https://github.com/OctoMap/octomap_rviz_plugins.git  \
    && cd octomap_rviz_plugins \
    && git checkout c8eafdb7a846eb11853c789d091551cedf86089b 

# RUN /bin/bash -c "cd /root/catkin_ws/ && source /opt/ros/kinetic/setup.sh && catkin_make"

RUN sudo apt-get install -y ros-${ROS_DISTRO}-octomap  ros-${ROS_DISTRO}-octomap-ros

RUN ["/bin/bash", "-c", "cd /root/catkin_ws && source /opt/ros/${ROS_DISTRO}/setup.bash && catkin_make"]

# COPY TEMPT/caffe-segnet /root/caffe-segnet

# Caffe-SegNet
RUN export TORCH_CUDA_ARCH_LIST="8.9"
RUN sudo apt install caffe-cuda -y
RUN git clone https://github.com/yubaoliu/caffe-segnet.git /root/caffe-segnet
RUN cd /root/caffe-segnet \
    && [ ! -d "build" ] && mkdir build  \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=/usr/local -DUSE_CUDNN=OFF -DCUDA_ARCH_NAME=Manual -DCUDA_ARCH_BIN="89" -DCUDA_ARCH_PTX="89" \
    && make -j2 \
    && sudo make install

# Load ROS environment at each run
COPY ./docker/ros_entrypoint.sh /root/ros_entrypoint.sh
RUN sudo chmod 755 /root/ros_entrypoint.sh
ENTRYPOINT ["/root/ros_entrypoint.sh"]

# ENV NVIDIA_VISIBLE_DEVICES \
# ${NVIDIA_VISIBLE_DEVICES:-all}
# ENV NVIDIA_DRIVER_CAPABILITIES \
# ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

# ENV NVIDIA_DRIVER_CAPABILITIES compute,display,graphics,utility,video

CMD ["bash"]
