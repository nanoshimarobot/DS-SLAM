FROM yubaoliu/root:ros-cuda10.0-cudnn7-ubuntu16.04

RUN apt update \
    &&  apt install -f \
    && apt install -y  libglew-dev \
       libxkbcommon-dev \
       cmake-qt-gui \
       libgoogle-glog-dev \
       ros-kinetic-octomap-ros \
       libatlas-base-dev \
       libgflags-dev \
       libhdf5-serial-dev \
       libleveldb-dev \
       liblmdb-dev \
       libopencv-dev \
       libprotobuf-dev \
       libsnappy-dev \
       protobuf-compiler \
       python-numpy \
       python-tk \
       libeigen3-dev

## update pip
RUN curl -kL https://bootstrap.pypa.io/get-pip.py | python  \
    && curl -kL https://bootstrap.pypa.io/get-pip.py | python3 
 
## coco API
RUN pip2 install git+https://github.com/philferriere/cocoapi.git#subdirectory=PythonAPI
RUN pip3 install git+https://github.com/philferriere/cocoapi.git#subdirectory=PythonAPI

# Install mask rcnn dependencies
COPY requirements.txt /root/requirements.txt
RUN  pip2 install  -r /root/requirements.txt --ignore-installed enum34
RUN  pip3 install  -r /root/requirements.txt

WORKDIR /root/

# Download Maskrcnn modle
RUN mkdir /root/cnnmodel \
   && cd /root/cnnmodel \
   && wget -c http://mi.eng.cam.ac.uk/~agk34/resources/SegNet/segnet_pascal.caffemodel

#Pangolin
RUN git clone https://github.com/stevenlovegrove/Pangolin.git \
    && cd Pangolin \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Debug \
    && make -j 3 \
    && make install

## Sophus
#RUN git clone https://github.com/yubaoliu/Sophus.git \
#    && cd Sophus \
#    && git checkout master \
#    && mkdir build \
#    && cd build \
#    && cmake .. -DCMAKE_BUILD_TYPE=Debug \
#    && make -j3 \
#    && make install 

# G2O
#RUN git clone https://github.com/yubaoliu/g2o.git \
#   && cd g2o \
#   && mkdir build \
#   && cd build \
#   && cmake .. -DCMAKE_BUILD_TYPE=Debug \
#   && make -j 3 \
#   && make install \
#   && cmake .. -DCMAKE_BUILD_TYPE=Release \
#   && make -j 3 \
#   && make install

## TUM Benchmark
#RUN cd /root \
#    && svn checkout https://svncvpr.in.tum.de/cvpr-ros-pkg/trunk/rgbd_benchmark/rgbd_benchmark_tools


## Caffe-SegNet
RUN  git clone https://github.com/yubaoliu/caffe-segnet.git
#RUN  git clone https://github.com/yubaoliu/caffe-segnet.git \
#    && cd caffe-segnet \
#    && mkdir build  \
#    && cd build \
#    && cmake .. -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=/usr/local \
#    && make -j2 \
#    && make install 


WORKDIR /root/catkin_ws/src
# Octomap
RUN git clone https://github.com/yubaoliu/octomap_mapping.git \
    && git clone https://github.com/yubaoliu/octomap_rviz_plugins.git 
#    && cd /root/catkin_ws \
#    && /bin/bash -c "source /opt/ros/kinetic/setup.bash & catkin_make"

# # Load ROS environment at each run
COPY ./ros_entrypoint.sh /
RUN chmod 755 /ros_entrypoint.sh
ENTRYPOINT ["/ros_entrypoint.sh"]


CMD ["bash"]
